<%
	record  ||= nil
	options ||= Hash.new
	options[:preview] 	= false if options[:preview].nil?
	options[:edit] 		= true if options[:edit].nil?
	options[:delete] 	= true if options[:delete].nil?
	options[:user] 		= true if options[:user].nil?
	options[:byline]	= true if options[:byline].nil?
	options[:approval] 	= true if options[:approval].nil?
	options[:votes] 	= false if options[:votes].nil?
	options[:date] 		= true if options[:date].nil?
	options[:labels] 	= false if options[:labels].nil? # turn on text labels?
		
	# Narrow menu options based on user's permissions 
	options[:approval]  = options[:approval] && record.respond_to?(:is_approved?) && record.can?(@logged_in_user, :approve) 	
	options[:user]		= options[:user] && record.respond_to?(:user_id) && !record.user_id.blank? ? (!record.record.nil? ? !record.record.is_user_owner?(record.user) : false) : false
	options[:preview] 	= options[:preview] && record.record && record.record.can?(@logged_in_user, :edit) 
	options[:edit] 		= options[:edit] && record.can?(@logged_in_user, :edit)
	options[:delete]	= options[:delete] && record.can?(@logged_in_user, :delete)	
	options[:votes]		= options[:votes] && !@logged_in_user.anonymous? 
%>


<%
  	# Determine if menu should be shown
  	show_menu = options.values.include?(true)
%>

<%= content_tag(:div, :class => :record_menu) do %>
	<table style="width:100%" cellpadding="0" cellspacing="0">
		<tr>
			<td class="left">
				<%= content_tag(:ul, :class => "record_menu left record_menu_left") do %>
					<%= yield :record_menu_left %>	 
					<%
						# Empty content_for content in case of loop
						@view_flow.content.delete(:record_menu_left) 
					%>				
						
					<% if options[:date] || options[:user] %>						
						<%= content_tag :li do %>
							<%= content_tag :span, :class => :user do %>
								<%= friendly_date(record.created_at) %>
								<% if options[:user] %>								
									<%= options[:byline] ? I18n.t("single.by").downcase : nil %>
									<%= link_to_user(record.user, :avatar => true, :name => options[:byline]) %>
								<% end %>								
							<% end %>
						<% end %>
					<% end %>
					
				
					<% if options[:approval] %>
						<%= content_tag :li, :class => "approval" do %>
							<%= content_tag(:span, :class => "approval_box") do %>
								<%= record.is_approved? ? icon("approved", t("single.approved"), "icon help") + (options[:labels] ? " #{t("single.approved")}" : "") : icon("unapproved", "#{t("single.not")} #{t("single.approved")}", "icon help") + (options[:labels] ? " #{t("single.not")} #{t("single.approved")}" : "") %>						
								<%= link_to(icon("cycle", t("label.item_change", :item => t("single.approval"))), {:action => "change_approval", :id => record.record, :record_type => record.class.name, :record_id => record.id,  "#{record.class.system_name.downcase}_id".to_sym => record.id, :controller => record.class.name.pluralize.underscore}, :confirm => t("confirm.general")) %>
							<% end %>
						<% end %>
					<% end %>
				<% end %>
			</td>
			<td class="right">		
				<%= content_tag(:ul, :class => "record_menu right record_menu_right") do %>
						<% if options[:delete] %>
						    <%= content_tag(:li, link_to(icon("delete") + (options[:labels] ? " #{t("single.delete")}" : ""), { :action => 'delete', :controller => record.class.name.pluralize.underscore, :record_id => record.id, :record_type => record.class.name, "#{record.class.system_name.underscore}_id".to_sym => record.id}, :confirm => t("confirm.item_delete", :item => record.class.model_name.human))) %>																
						<% end %>
						
						<% if options[:edit] %>
							<%= content_tag(:li, link_to(icon("edit") + (options[:labels] ? " #{t("single.edit")}" : ""), {:action => "edit", :controller => record.class.name.pluralize.underscore, :record_id => record.id, :record_type => record.class.name, "#{record.class.system_name.underscore}_id".to_sym => record.id})) %>
						<% end %>

						<% if options[:preview] %>
							<%= content_tag :li do %>									
								<% if record.record.is_record_preview?(record) %>
									<%= content_tag(:span, icon("star_selected", t("single.preview"), "help")) %>
								<% else %>
									<%= link_to(icon("star_empty", t("label.item_mark_as", :item => record.class.model_name.human, :name => Item.model_name.human + " " + t("single.preview"))), {:controller => "items", :action => "set_preview", :id => record.record, :preview_id => record.id, :preview_type => record.class.name}, :method => :post)  %>	
								<% end %>
							<% end %>
						<% end %>						
	
						<% if options[:votes] %>
							<%= content_tag :li, :class => "vote" do %>
								<%= content_tag :span, :class => "vote_box" do %>																		 	
									<%= content_tag(:span, record.votes, :id => "votes_#{record.class.name.underscore}_#{record.id}", :class => "votes help", :title =>  MakeVoteable::Voting.model_name.human(:count => :other)) %>
									<% if !@logged_in_user.anonymous?  %>							 				
						 				<% up_voted, down_voted = @logged_in_user.up_voted?(record), @logged_in_user.down_voted?(record)  %>
										<%= link_to_function(icon("vote#{up_voted ? "d" : ""}_up", t("label.item_upvote", :item => record.class.model_name.human)), "vote('#{record.class.name.underscore}', #{record.record.id}, #{record.id}, 'up')", :disabled => down_voted, :id => "up_vote_#{record.class.name.underscore}_#{record.id}") %>
										<%= link_to_function(icon("vote#{down_voted ? "d" : ""}_down", t("label.item_downvote", :item => record.class.model_name.human)), "vote('#{record.class.name.underscore}', #{record.record.id}, #{record.id}, 'down')", :disabled => up_voted, :id => "down_vote_#{record.class.name.underscore}_#{record.id}") %>
									<% end %>							
								<% end %>
							<% end %>
						<% end %>	

						<%= yield :record_menu_right %>	 
						<%
							# Empty content_for content in case of loop
							@view_flow.content.delete(:record_menu_right) 
						%>								
				<% end %>
			</td>
		</tr>
	</table>					
<% end if show_menu %>
